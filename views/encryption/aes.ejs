<div class="encryption">
    <div class="text-3xl mt-5" id="aes">AES</div>
    <div class="flex">
      <div x-data={show:false,animate:false} class="w-full">
        <p x-on:click.prevent="show=!show,animate=!animate" class="flex p-2 cursor-pointer">
          <a class="focus:outline-none mr-2 font-bold">
            Example Code 
          </a>
          <i x-show="!show" class="mt-2 fas fa-sort-up"></i>
          <i x-show="show" class="mb-2 fas fa-sort-down"></i>
        </p> 
        <div x-show="show,animate" 
          x-transition:enter="transition linear duration-500" 
          x-transition:enter-start="opacity-0 transform scale-90" 
          x-transition:enter-end="opacity-100 transform scale-100" 
          class="border px-2 py-2 text-gray-700 mt-3">
<pre>
<code class="javascript">const crypto = require('crypto');

function encrypt(data,bit,mode,enc_key,iv){
    const cipher = crypto.createCipheriv('aes-'+bit+'-'+mode, enc_key, iv);

    let encrypted = cipher.update(data, 'utf8', 'base64');
    encrypted += cipher.final('base64');
    return encrypted;
}

function decrypt(data,bit,mode,enc_key,iv){
    const decipher = crypto.createDecipheriv('aes-'+bit+'-'+mode, enc_key, iv);

    let decrypted = decipher.update(data, 'base64', 'utf8');
    decrypted += decipher.final();

    return decrypted;
}

//256
//iv length must be 8
let encrypted = encrypt("asdfgh","256","cbc",Buffer.from("5a1920bf80b6215560d3b5ad5499328w"),Buffer.from("55d4a850c95af4fd"));
console.log(encrypted);

//192
//iv length must be 8
let encrypted192 = encrypt("asdfgh","192","cbc",Buffer.from("c72e7eb33ea11d99a57d5f3e"),Buffer.from("55d4a850c95af4fd"));
console.log(encrypted192);

//128
//iv length must be 8
let encrypted128 = encrypt("asdfgh","128","cbc",Buffer.from("a18e5283b68c8d8e"),Buffer.from("55d4a850c95af4fd"));
console.log(encrypted128);

//256
//iv length must be 8
let decrypted = decrypt("FMuIBKYrU6Md+GWtDLg8Kw==","256","cbc",Buffer.from("5a1920bf80b6215560d3b5ad5499328w"),Buffer.from("55d4a850c95af4fd"));
console.log(decrypted);

//192
//iv length must be 8
let decrypted192 = decrypt("27Z4+sKdu8nR6Irja5Z9LQ==","192","cbc",Buffer.from("c72e7eb33ea11d99a57d5f3e"),Buffer.from("55d4a850c95af4fd"));
console.log(decrypted192);

//128
//iv length must be 8
let decrypted128 = decrypt("71z4F+sKrEVeZTH/wvHwvw==","128","cbc",Buffer.from("a18e5283b68c8d8e"),Buffer.from("55d4a850c95af4fd"));
console.log(decrypted128);
</code></pre>
        </div>

        <div class="encrypt mt-2" x-data={show:false,animate:false}>
          <p x-on:click.prevent="show=!show,animate=!animate" class="flex p-2 cursor-pointer">
            <a class="focus:outline-none mr-2 font-bold">
              Encrypt
            </a>
            <i x-show="!show" class="mt-2 fas fa-sort-up"></i>
            <i x-show="show" class="mb-2 fas fa-sort-down"></i>
          </p> 
          <div x-show="show,animate" 
          x-transition:enter="transition linear duration-500" 
          x-transition:enter-start="opacity-0 transform scale-90" 
          x-transition:enter-end="opacity-100 transform scale-100">

            <form class="w-full max-w-lg" enctype="multipart/form-data" x-data="encryptAes()" @submit.prevent="submitData">
              <div class="flex flex-wrap mt-2 mb-6">
                <div class="w-full md:w-1/2 px-3 mb-6 md:mb-0">
                  <label class="block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2" for="text">
                    Input text (Plain text)
                  </label>
                  <input class="appearance-none block w-full bg-gray-200 text-gray-700 rounded py-3 px-4 mb-3 leading-tight border border-gray-700 focus:outline-none focus:bg-white" id="text" type="text" placeholder="Jane" x-model="formData.data">
                </div>
                <div class="w-full md:w-1/2 px-3">
                  <label class="block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2" for="key">
                    input secret key
                  </label>
                  <input class="appearance-none block w-full bg-gray-200 text-gray-700 rounded py-3 px-4 mb-3 leading-tight border border-gray-700 focus:outline-none focus:bg-white" id="key" type="text" placeholder="Jane" x-model="formData.key"> 
                </div>
              </div>
              <div class="flex flex-wrap mt-2 mb-6">
                <div class="w-full md:w-1/2 px-3 mb-6 md:mb-0">
                  <label class="block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2" for="bit">
                    Bit
                  </label>
                  <select class="block w-full bg-gray-200 text-gray-700 rounded py-3 px-4 mb-3 leading-tight border border-gray-700 focus:outline-none focus:bg-white" name="bit" id="bit" x-model="formData.bit">
                    <option value="128">128</option>
                    <option value="192">192</option>
                    <option value="256">256</option>
                  </select>
                </div>
                <div class="w-full md:w-1/2 px-3">
                  <label class="block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2" for="iv">
                    Initialization Vector
                  </label>
                  <input class="appearance-none block w-full bg-gray-200 text-gray-700 rounded py-3 px-4 mb-3 leading-tight border border-gray-700 focus:outline-none focus:bg-white" id="iv" type="text" placeholder="Jane" x-model="formData.iv"> 
                </div>
              </div>
              <div class="flex flex-wrap mb-6">
                <div class="w-full px-3">
                  <label class="block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2" for="mode">
                    Mode
                  </label>
                  <select class="block w-full bg-gray-200 text-gray-700 rounded py-3 px-4 mb-3 leading-tight border border-gray-700 focus:outline-none focus:bg-white" name="mode" id="mode" x-model="formData.mode">
                    <option value="cbc">CBC</option>
                    <option value="cfb">CFB</option>
                    <option value="ctr">CTR</option>
                    <option value="gcm">GCM</option>
                    <option value="ofb">OFB</option>
                  </select>
                </div>
              </div>
              <div class="flex flex-wrap mb-6">
                <div class="w-full px-3">
                  <button class="bg-blue-600 hover:bg-blue-700 border-b-4 border-solid border-blue-800 px-4 py-2 text-white" id="encryptAes" x-text="buttonLabel" :disabled="loading">Encrypt!</button>
                </div>
              </div>
              <div class="flex flex-wrap mb-6">
                <div class="w-full px-3">
                  <label class="block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2" for="encrypted">
                    Result
                  </label>
                  <input readonly class="appearance-none block w-full bg-gray-200 text-gray-700 rounded py-3 px-4 mb-3 leading-tight border border-gray-700 focus:outline-none focus:bg-white" id="encrypted" type="text" placeholder="Jane" x-model="message">
                </div>
              </div>
            </form>

          </div>  
        </div>

        <div class="decrypt mt-2" x-data={show:false,animate:false}>
          <p x-on:click.prevent="show=!show,animate=!animate" class="flex p-2 cursor-pointer">
            <a class="focus:outline-none mr-2 font-bold">
              Decrypt
            </a>
            <i x-show="!show" class="mt-2 fas fa-sort-up"></i>
            <i x-show="show" class="mb-2 fas fa-sort-down"></i>
          </p> 
          <div x-show="show,animate" 
          x-transition:enter="transition linear duration-500" 
          x-transition:enter-start="opacity-0 transform scale-90" 
          x-transition:enter-end="opacity-100 transform scale-100">

            <form class="w-full max-w-lg" enctype="multipart/form-data" x-data="decryptAes()" @submit.prevent="submitData">
              <div class="flex flex-wrap mt-2 mb-6">
                <div class="w-full md:w-1/2 px-3 mb-6 md:mb-0">
                  <label class="block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2" for="text">
                    Input text (base64)
                  </label>
                  <input class="appearance-none block w-full bg-gray-200 text-gray-700 rounded py-3 px-4 mb-3 leading-tight border border-gray-700 focus:outline-none focus:bg-white" id="text" type="text" placeholder="Jane" x-model="formData.data">
                </div>
                <div class="w-full md:w-1/2 px-3">
                  <label class="block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2" for="key">
                    input secret key
                  </label>
                  <input class="appearance-none block w-full bg-gray-200 text-gray-700 rounded py-3 px-4 mb-3 leading-tight border border-gray-700 focus:outline-none focus:bg-white" id="key" type="text" placeholder="Jane" x-model="formData.key"> 
                </div>
              </div>
              <div class="flex flex-wrap mt-2 mb-6">
                <div class="w-full md:w-1/2 px-3 mb-6 md:mb-0">
                  <label class="block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2" for="bit">
                    Bit
                  </label>
                  <select class="block w-full bg-gray-200 text-gray-700 rounded py-3 px-4 mb-3 leading-tight border border-gray-700 focus:outline-none focus:bg-white" name="bit" id="bit" x-model="formData.bit">
                    <option value="128">128</option>
                    <option value="192">192</option>
                    <option value="256">256</option>
                  </select>
                </div>
                <div class="w-full md:w-1/2 px-3">
                  <label class="block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2" for="iv">
                    Initialization Vector
                  </label>
                  <input class="appearance-none block w-full bg-gray-200 text-gray-700 rounded py-3 px-4 mb-3 leading-tight border border-gray-700 focus:outline-none focus:bg-white" id="iv" type="text" placeholder="Jane" x-model="formData.iv"> 
                </div>
              </div>
              <div class="flex flex-wrap mb-6">
                <div class="w-full px-3">
                  <label class="block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2" for="mode">
                    Mode
                  </label>
                  <select class="block w-full bg-gray-200 text-gray-700 rounded py-3 px-4 mb-3 leading-tight border border-gray-700 focus:outline-none focus:bg-white" name="mode" id="mode" x-model="formData.mode">
                    <option value="cbc">CBC</option>
                    <option value="cfb">CFB</option>
                    <option value="ctr">CTR</option>
                    <option value="gcm">GCM</option>
                    <option value="ofb">OFB</option>
                  </select>
                </div>
              </div>
              <div class="flex flex-wrap mb-6">
                <div class="w-full px-3">
                  <button class="bg-blue-600 hover:bg-blue-700 border-b-4 border-solid border-blue-800 px-4 py-2 text-white" id="decryptAes" x-text="buttonLabel" :disabled="loading">Decrypt!</button>
                </div>
              </div>
              <div class="flex flex-wrap mb-6">
                <div class="w-full px-3">
                  <label class="block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2" for="encrypted">
                    Result
                  </label>
                  <input readonly class="appearance-none block w-full bg-gray-200 text-gray-700 rounded py-3 px-4 mb-3 leading-tight border border-gray-700 focus:outline-none focus:bg-white" id="encrypted" type="text" placeholder="Jane" x-model="message">
                </div>
              </div>
            </form>

          </div>  
        </div>
    </div>
  </div>
</div>

<script>
  function encryptAes() {
    return {
      formData: {
        data: '',
        key: '',
        bit: '128',
        iv: '',
        mode: 'cbc'
      },
          message: '',
          loading: false,
          buttonLabel: 'Encrypt',
  
          submitData() {
              this.buttonLabel = 'encrypting...'
              this.loading = true;
              this.message = ''
              
              fetch('/aes/encrypt', {
                  method: 'POST',
                  headers: { 'Content-Type': 'application/json' },
                  body: JSON.stringify(this.formData)
              })
              .then(response => response.json())
              .then((data) => {
                  this.message = data.message
              })
              .catch(() => {
                  this.message = 'Ooops! Something went wrong!'
              })
              .finally(() => {
                  this.loading = false;
                  this.buttonLabel = 'Encrypt'
              })
          }
    }
  }
  
  function decryptAes() {
    return {
      formData: {
        data: '',
        key: '',
        bit: '128',
        iv: '',
        mode: 'cbc'
      },
          message: '',
          loading: false,
          buttonLabel: 'Decrypt',
          
          submitData() {
              this.buttonLabel = 'decrypting...'
              this.loading = true;
              this.message = ''
              
              fetch('/aes/decrypt', {
                  method: 'POST',
                  headers: { 'Content-Type': 'application/json' },
                  body: JSON.stringify(this.formData)
              })
              .then(response => response.json())
              .then((data) => {
                  this.message = data.message
              })
              .catch(() => {
                  this.message = 'Ooops! Something went wrong!'
              })
              .finally(() => {
                  this.loading = false;
                  this.buttonLabel = 'Decrypt'
              })
          }
    }
  }
  </script>